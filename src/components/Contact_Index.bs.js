// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../helpers/X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Contact from "../model/Contact.bs.js";
import * as Context from "../helpers/Context.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as ReactNativePaper from "react-native-paper";

function Contact_Index(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  return React.createElement(React.Fragment, undefined, React.createElement(X.Title.make, {
                  children: "Contacts"
                }), React.createElement(ReactNativePaper.List.Section, {
                  title: "",
                  children: Belt_Array.mapWithIndex(match[0].contacts, (function (i, contact) {
                          return React.createElement(ReactNativePaper.Card, {
                                      children: null,
                                      key: contact.hexPublicKey
                                    }, React.createElement(ReactNativePaper.Card.Content, {
                                          children: null
                                        }, React.createElement(ReactNativePaper.List.Item, {
                                              title: "email",
                                              description: Belt_Option.getWithDefault(contact.email, "")
                                            }), React.createElement(ReactNativePaper.List.Item, {
                                              title: "phoneNumber",
                                              description: Belt_Option.getWithDefault(contact.phoneNumber, "")
                                            }), React.createElement(ReactNativePaper.List.Item, {
                                              title: "0x" + contact.hexPublicKey
                                            })), React.createElement(ReactNativePaper.Card.Actions, {
                                          children: React.createElement(ReactNativePaper.Button, {
                                                mode: "contained",
                                                onPress: (function (param) {
                                                    Curry._1(dispatch, {
                                                          TAG: /* Contact_Remove */6,
                                                          _0: i
                                                        });
                                                  }),
                                                children: "Delete"
                                              })
                                        }));
                        })),
                  style: X.styles["margin-x"]
                }), React.createElement(ReactNativePaper.Button, {
                  mode: "outlined",
                  onPress: (function (param) {
                      Contact.clear(undefined);
                      Curry._1(dispatch, /* Reset */0);
                    }),
                  children: "Clear contacts"
                }), React.createElement(X.Title.make, {
                  children: "-"
                }));
}

var make = Contact_Index;

export {
  make ,
}
/* X Not a pure module */
