// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Core from "../Core.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Context from "../helpers/Context.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as ReactNativePaper from "react-native-paper";
import * as ElectionNew_ChoiceList from "./ElectionNew_ChoiceList.bs.js";

function ElectionNew(Props) {
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return "";
      });
  var setName = match$1[1];
  var name = match$1[0];
  var match$2 = React.useState(function () {
        return "";
      });
  var setDesc = match$2[1];
  var desc = match$2[0];
  var match$3 = React.useState(function () {
        return [];
      });
  var choices = match$3[0];
  var electionCreate = function (param) {
    Core.Election.create(name, desc, choices, state, dispatch);
  };
  var user = Belt_Array.get(state.ids, 0);
  var ownerDescription = user !== undefined ? user.hexPublicKey : "No public key found";
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNativePaper.TextInput, {
                  mode: "flat",
                  label: "Nom de l'Ã©lection",
                  value: name,
                  onChangeText: (function (text) {
                      Curry._1(setName, (function (param) {
                              return text;
                            }));
                    }),
                  testID: "election-name"
                }), React.createElement(ReactNativePaper.TextInput, {
                  mode: "flat",
                  label: "Description",
                  value: desc,
                  onChangeText: (function (text) {
                      Curry._1(setDesc, (function (param) {
                              return text;
                            }));
                    }),
                  testID: "election-desc"
                }), React.createElement(ElectionNew_ChoiceList.make, {
                  choices: choices,
                  setChoices: match$3[1]
                }), React.createElement(ReactNativePaper.List.Item, {
                  title: "Owner",
                  description: ownerDescription
                }), React.createElement(ReactNativePaper.Button, {
                  mode: "contained",
                  onPress: electionCreate,
                  children: "Create"
                }));
}

var make = ElectionNew;

export {
  make ,
}
/* Core Not a pure module */
