// Generated by ReScript, PLEASE EDIT WITH CARE

import * as X from "../helpers/X.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as State from "../State.bs.js";
import * as React from "react";
import * as Context from "../helpers/Context.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Transaction from "../model/Transaction.bs.js";
import * as ReactNative from "react-native";
import * as ReactNativePaper from "react-native-paper";

function ElectionShow__AddContactButton(Props) {
  var electionId = Props.electionId;
  var match = Context.use(undefined);
  var dispatch = match[1];
  var state = match[0];
  var match$1 = React.useState(function () {
        return false;
      });
  var setshowModal = match$1[1];
  var election = State.getElection(state, electionId);
  var orgId = Belt_Option.getExn(Belt_Array.getBy(state.ids, (function (id) {
              return id.hexPublicKey === election.ownerPublicKey;
            })));
  return React.createElement(React.Fragment, undefined, React.createElement(ReactNativePaper.Button, {
                  mode: "outlined",
                  onPress: (function (param) {
                      Curry._1(setshowModal, (function (param) {
                              return true;
                            }));
                    }),
                  children: "Add existing contact"
                }), React.createElement(ReactNativePaper.Portal, {
                  children: React.createElement(ReactNativePaper.Modal, {
                        visible: match$1[0],
                        onDismiss: (function (param) {
                            Curry._1(setshowModal, (function (param) {
                                    return false;
                                  }));
                          }),
                        children: React.createElement(ReactNative.View, {
                              style: ReactNative.StyleSheet.flatten([
                                    X.styles.modal,
                                    X.styles.layout
                                  ]),
                              testID: "choice-modal",
                              children: null
                            }, React.createElement(ReactNativePaper.Title, {
                                  style: X.styles.title,
                                  children: "Invite an existing contact"
                                }), Belt_Array.mapWithIndex(state.contacts, (function (i, contact) {
                                    return React.createElement(ReactNativePaper.List.Item, {
                                                onPress: (function (param) {
                                                    var ballot_electionPublicKey = election.ownerPublicKey;
                                                    var ballot_voterPublicKey = contact.hexPublicKey;
                                                    var ballot = {
                                                      electionTx: electionId,
                                                      previousTx: undefined,
                                                      electionPublicKey: ballot_electionPublicKey,
                                                      voterPublicKey: ballot_voterPublicKey,
                                                      ciphertext: undefined,
                                                      pubcred: undefined
                                                    };
                                                    var tx = Transaction.SignedBallot.make(ballot, orgId);
                                                    Curry._1(dispatch, {
                                                          TAG: /* Transaction_Add_With_Broadcast */3,
                                                          _0: tx
                                                        });
                                                    Curry._1(setshowModal, (function (param) {
                                                            return false;
                                                          }));
                                                  }),
                                                title: Belt_Option.getWithDefault(contact.email, ""),
                                                key: String(i)
                                              });
                                  })), React.createElement(ReactNativePaper.Button, {
                                  onPress: (function (param) {
                                      Curry._1(setshowModal, (function (param) {
                                              return false;
                                            }));
                                    }),
                                  children: "Retour"
                                }))
                      })
                }));
}

var make = ElectionShow__AddContactButton;

export {
  make ,
}
/* X Not a pure module */
