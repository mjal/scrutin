// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$URL from "./helpers/URL.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as Config from "./helpers/Config.bs.js";
import * as $$String from "rescript/lib/es6/string.js";
import * as Contact from "./model/Contact.bs.js";
import * as Js_json from "rescript/lib/es6/js_json.js";
import * as Trustee from "./model/Trustee.bs.js";
import * as Identity from "./model/Identity.bs.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Transaction from "./model/Transaction.bs.js";

function cache_update(tx, dispatch) {
  var match = tx.type_;
  if (match === "ballot") {
    return Curry._1(dispatch, {
                TAG: /* Cache_Ballot_Add */8,
                _0: tx.contentHash,
                _1: Transaction.SignedBallot.unwrap(tx)
              });
  } else {
    return Curry._1(dispatch, {
                TAG: /* Cache_Election_Add */7,
                _0: tx.contentHash,
                _1: Transaction.SignedElection.unwrap(tx)
              });
  }
}

function identities_store(ids, _dispatch) {
  Identity.store_all(ids);
}

function transactions_store(txs, _dispatch) {
  Transaction.store_all(txs);
}

function trustees_store(trustees, _dispatch) {
  Trustee.store_all(trustees);
}

function contacts_store(contacts, _dispatch) {
  Contact.store_all(contacts);
}

function identities_fetch(dispatch) {
  Identity.fetch_all(undefined).then(function (ids) {
        return Belt_Array.map(ids, (function (id) {
                      return Curry._1(dispatch, {
                                  TAG: /* Identity_Add */1,
                                  _0: id
                                });
                    }));
      });
}

function transactions_fetch(dispatch) {
  Transaction.fetch_all(undefined).then(function (txs) {
        return Belt_Array.map(txs, (function (tx) {
                      return Curry._1(dispatch, {
                                  TAG: /* Transaction_Add */2,
                                  _0: tx
                                });
                    }));
      });
}

function trustees_fetch(dispatch) {
  Trustee.fetch_all(undefined).then(function (os) {
        return Belt_Array.map(os, (function (o) {
                      return Curry._1(dispatch, {
                                  TAG: /* Trustee_Add */4,
                                  _0: o
                                });
                    }));
      });
}

function contacts_fetch(dispatch) {
  Contact.fetch_all(undefined).then(function (os) {
        return Belt_Array.map(os, (function (o) {
                      return Curry._1(dispatch, {
                                  TAG: /* Contact_Add */5,
                                  _0: o
                                });
                    }));
      });
}

function identities_clear(_dispatch) {
  Identity.clear(undefined);
}

function transactions_clear(_dispatch) {
  Transaction.clear(undefined);
}

function trustees_clear(_dispatch) {
  Trustee.clear(undefined);
}

function transactions_get(dispatch) {
  fetch("" + Config.api_url + "/transactions").then(function (prim) {
          return prim.json();
        }).then(function (response) {
        var jsons = Js_json.decodeArray(response);
        if (jsons !== undefined) {
          Belt_Array.map(jsons, (function (json) {
                  var tx = Transaction.from_json(json);
                  Curry._1(dispatch, {
                        TAG: /* Transaction_Add */2,
                        _0: tx
                      });
                }));
          return ;
        }
        
      });
}

function identities_get(dispatch) {
  Identity.fetch_all(undefined).then(function (ids) {
        return Belt_Array.map(ids, (function (id) {
                      return Curry._1(dispatch, {
                                  TAG: /* Identity_Add */1,
                                  _0: id
                                });
                    }));
      });
}

function transaction_broadcast(tx, _dispatch) {
  Transaction.broadcast(tx);
}

function goToUrl(dispatch) {
  $$URL.getAndThen(function (url) {
        if (!url) {
          return ;
        }
        if (url.hd !== "ballots") {
          return ;
        }
        var match = url.tl;
        if (!match) {
          return ;
        }
        if (match.tl) {
          return ;
        }
        var txHash = match.hd;
        setTimeout((function (param) {
                Curry._1(dispatch, {
                      TAG: /* Navigate */0,
                      _0: {
                        TAG: /* Ballot_Show */2,
                        _0: txHash
                      }
                    });
              }), 500);
      });
}

function importIdentityFromUrl(dispatch) {
  if ($$URL.getCurrentHash(undefined).length <= 12) {
    return ;
  }
  var currentHash = $$URL.getCurrentHash(undefined);
  var hexSecretKey = $$String.sub(currentHash, 1, currentHash.length - 1 | 0);
  console.log(hexSecretKey);
  Curry._1(dispatch, {
        TAG: /* Identity_Add */1,
        _0: Identity.make2(hexSecretKey)
      });
}

export {
  cache_update ,
  identities_store ,
  transactions_store ,
  trustees_store ,
  contacts_store ,
  identities_fetch ,
  transactions_fetch ,
  trustees_fetch ,
  contacts_fetch ,
  identities_clear ,
  transactions_clear ,
  trustees_clear ,
  transactions_get ,
  identities_get ,
  transaction_broadcast ,
  goToUrl ,
  importIdentityFromUrl ,
}
/* URL Not a pure module */
