// Generated by ReScript, PLEASE EDIT WITH CARE

import * as S from "../../../src/helpers/S.js";
import * as React from "react";
import * as Header from "../../../src/components/Header.js";
import * as StateContext from "../../../src/state/StateContext.js";
import * as ReactI18next from "react-i18next";
import * as JsxRuntime from "react/jsx-runtime";

function Index(props) {
  var match = StateContext.use();
  var dispatch = match[1];
  var state = match[0];
  var match$1 = ReactI18next.useTranslation();
  var t = match$1.t;
  var match$2 = React.useState(function () {
        return "";
      });
  var setTitle = match$2[1];
  var title = match$2[0];
  var next = function (param) {
    var init = state.newElection;
    var newElection_description = init.description;
    var newElection_choices = init.choices;
    var newElection_mode = init.mode;
    var newElection = {
      title: title,
      description: newElection_description,
      choices: newElection_choices,
      mode: newElection_mode
    };
    dispatch({
          TAG: "UpdateNewElection",
          _0: newElection
        });
    dispatch({
          TAG: "Navigate",
          _0: {
            hd: "elections",
            tl: {
              hd: "new",
              tl: {
                hd: "step2",
                tl: /* [] */0
              }
            }
          }
        });
  };
  return JsxRuntime.jsxs(JsxRuntime.Fragment, {
              children: [
                JsxRuntime.jsx(Header.make, {
                      title: t("election.new.header")
                    }),
                JsxRuntime.jsx(S.Section.make, {
                      title: t("election.new.title")
                    }),
                JsxRuntime.jsx(S.TextInput.make, {
                      testID: "election-title",
                      value: title,
                      onChangeText: (function (text) {
                          setTitle(function (param) {
                                return text;
                              });
                        }),
                      placeholder: t("election.new.titlePlaceholder"),
                      placeholderTextColor: "#bbb",
                      onSubmitEditing: next,
                      autoFocus: true
                    }),
                JsxRuntime.jsx(S.Button.make, {
                      onPress: next,
                      title: t("election.new.next"),
                      disabled: title === ""
                    })
              ]
            });
}

var make = Index;

var $$default = Index;

export {
  make ,
  $$default as default,
}
/* S Not a pure module */
